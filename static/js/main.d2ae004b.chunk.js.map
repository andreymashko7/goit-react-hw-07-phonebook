{"version":3,"sources":["components/Filter/Filter.module.css","redux/phonebook-selectors.js","redux/phonebook-actions.js","redux/phonebook-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onSubmit","contact","post","then","data","catch","error","contactsOperations","e","preventDefault","namesInPhonebook","map","numbersInPhonebook","alert","matchContact","className","s","form","container","htmlFor","label","type","value","onChange","currentTarget","placeholder","input_name","input","button","ContactList","onDeleteContact","id","delete","useEffect","a","get","onClick","Filter","contactsActions","target","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ae004b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3WMgt\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\r\nimport {\r\n  addContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch(error => dispatch(deleteContactsError(error)));\r\n};\r\n\r\n// export const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   axios\r\n//     .get('/contacts')\r\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n//     .catch(error => dispatch(fetchContactsError(error)));\r\n// };\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport { getContacts } from '../../redux/phonebook-selectors';\nimport * as contactsOperations from '../../redux/phonebook-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) =>\n    dispatch(contactsOperations.addContact(name, number));\n\n  const matchContact = () => {\n    const namesInPhonebook = contacts.map(({ name }) => name);\n    const numbersInPhonebook = contacts.map(({ number }) => number);\n\n    if (\n      namesInPhonebook.includes(name) ||\n      numbersInPhonebook.includes(number)\n    ) {\n      alert(`${name}${number} is already in contacts!!!`);\n      return true;\n    }\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields');\n      return true;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n\n    if (matchContact()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <div className={s.container}>\n        <label htmlFor=\"name\" className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={e => setName(e.currentTarget.value)}\n            placeholder=\"Rosie Simpson\"\n            className={s.input_name}\n          ></input>\n        </label>\n\n        <label htmlFor=\"number\" className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={e => setNumber(e.currentTarget.value)}\n            placeholder=\"459-12-56\"\n            className={s.input}\n          ></input>\n        </label>\n      </div>\n\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import './ContactList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/phonebook-selectors';\nimport * as contactsOperations from '../../redux/phonebook-operations';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"Contacts__item\">\n          <p className=\"Contacts__text\">\n            {name} : {number}\n          </p>\n\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nimport { getFilter } from '../../redux/phonebook-selectors';\nimport * as contactsActions from '../../redux/phonebook-actions';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(contactsActions.changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n","import './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <div className=\"main_container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    // contacts: persistReducer(contactspersistConfig, phonebookReducer),\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2aBt4\",\"button\":\"ContactForm_button__1EOD6\",\"container\":\"ContactForm_container__FWp13\",\"input_name\":\"ContactForm_input_name__2Ibao\"};"],"sourceRoot":""}